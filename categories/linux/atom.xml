<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Linux | co.de.mon.key]]></title>
  <link href="http://blog.codemonkey.pl/categories/linux/atom.xml" rel="self"/>
  <link href="http://blog.codemonkey.pl/"/>
  <updated>2014-05-13T12:30:14+02:00</updated>
  <id>http://blog.codemonkey.pl/</id>
  <author>
    <name><![CDATA[malpka]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MPlayer - Instalacja kodeków rmvb (i nie tylko) pod linuksem]]></title>
    <link href="http://blog.codemonkey.pl/2010/03/09/mplayer-instalacja-kodekow-rmvb-i-nie-tylko-pod-linuksem/"/>
    <updated>2010-03-09T17:46:00+01:00</updated>
    <id>http://blog.codemonkey.pl/2010/03/09/mplayer-instalacja-kodekow-rmvb-i-nie-tylko-pod-linuksem</id>
    <content type="html"><![CDATA[<p></p>


<pre>
cd ~<br>wget http://www1.mplayerhq.hu/MPlayer/releases/codecs/all-20061022.tar.bz2<br>sudo mkdir /usr/lib/codecs<br>sudo ln -s /usr/lib/codecs /usr/lib/codecs-win32<br>tar jxvf all-20061022.tar.bz2<br>sudo mv all-20061022/* /usr/lib/codecs<br><br>wget http://www1.mplayerhq.hu/MPlayer/releases/codecs/rp9codecs-20050115.tar.bz2<br>sudo mkdir /usr/lib/real<br>tar jxvf rp9codecs-20050115.tar.bz2<br>sudo mv rp9codecs-20050115/* /usr/lib/real
</pre>


<p><p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Do zapamiętania: Linuks - szyfrowanie za pomocą dm-crypt / luks]]></title>
    <link href="http://blog.codemonkey.pl/2009/08/19/do-zapamietania-linuks-szyfrowanie-za-pomoca-dm-crypt-luks/"/>
    <updated>2009-08-19T07:56:00+02:00</updated>
    <id>http://blog.codemonkey.pl/2009/08/19/do-zapamietania-linuks-szyfrowanie-za-pomoca-dm-crypt-luks</id>
    <content type="html"><![CDATA[<p>Zacząłęm to pisać sam, nawet już z pamięci, ale znalazłem <a href="http://mlawire.blogspot.com/2009/07/encrypted-filesystem-on-loop-device.html">stronę</a> na której jest dokładnie to co chciałem. Nie lubię korzystać w taki sposób z czyjejś pracy ale tym razem to będzie prywatnie dla mnie do zapamiętania.</p>


<p><code>modprobe dm_mod</code></p>


<h3>Tworzenie zaszyfrowanego systemu plików:</h3>


<p><code># create a 10M file<br>
$ dd if=/dev/urandom of=testfs bs=1M count=10<br>
<br>
# associate it with the loop device<br>
$ losetup /dev/loop0 testfs<br>
<br>
# encrypt it (will ask for password to use)<br>
$ cryptsetup luksFormat /dev/loop0<br>
<br>
# open the encrypted loop device<br>
$ cryptsetup luksOpen /dev/loop0 testfs<br>
<br>
# format it with ext2 (or whatever you prefer)<br>
$ mkfs.ext2 /dev/mapper/testfs<br>
<br>
# mount it<br>
$ mount /dev/mapper/testfs /mnt/test<br>
<br>
# confirm mount<br>
$ df -h /mnt/test<br>
Filesystem Size Used Avail Use% Mounted on<br>
/dev/mapper/testfs 9.2M 88K 8.7M 1% /mnt/test</code></p>


<h3>Odmontowanie systemu plików:</h3>


<p><code># unmount it<br>
$ umount /mnt/test<br>
<br>
# close encryption<br>
$ cryptsetup luksClose /dev/mapper/testfs<br>
<br>
# release loop device<br>
$ losetup -d /dev/loop0</code></p>


<h3>Montowanie szyfrowanego systemu plików:</h3>


<p><code><br>
# associate file with the loop device<br>
$ losetup /dev/loop0 testfs<br>
<br>
# open the encrypted loop device<br>
$ cryptsetup luksOpen /dev/loop0 testfs<br>
<br>
# mount it<br>
$ mount /dev/mapper/testfs /mnt/test<br></code></p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Automatyczne pobieranie z Rapidshare na Windowsie z wykorzystaniem Cygwina.]]></title>
    <link href="http://blog.codemonkey.pl/2009/03/01/automatyczne-pobieranie-z-rapidshare-windows-cygwin/"/>
    <updated>2009-03-01T14:39:00+01:00</updated>
    <id>http://blog.codemonkey.pl/2009/03/01/automatyczne-pobieranie-z-rapidshare-windows-cygwin</id>
    <content type="html"><![CDATA[<p>Jeżeli jesteś osobą korzystającą serwisu Rapidshare pewnie Twoja zabawa z nim wygląda następująco:</p>


<ul>
<li>klikasz na link / wklejasz jako adres w przeglądarce</li>
<li>Naciskasz przycisk "Free User"</li>
<li>Niecierpliwie czekasz aż cyferki dojdą do zera, a następnie znowu klikasz w przycisk Download.</li>
</ul>


<p>O ile w przypadku pojedynczych plików da się to zaakceptować, to gdy jest do pobrania kilkadziesiąt części nazwanych part[0-9]+.rar dochodzi problem oczekiwania do 30 minut między pobieraniem, oraz konieczność kontrolowania całego procesu pobierania i powtarzania wyżej wspomnianych kroków (stan na dzień 2009-03-01).</p>


<p><EXCERPT><p>Użytkownicy systemów *nixowych mają od jakiegoś czasu możliwość skorzystania ze znakomitego i cały czas uaktualnianego skryptu rsget-mod którego autorem jest <a href="nerdblog.pl">d4rky</a></p></p>

<p><a href="http://rs.nerdblog.pl/">rsget-mod - strona projektu</a></p>


<p>Skrypt umożliwia pełną automatyzację procesu pobierania zarówno pojedynczego linku, jak i zbioru adresów zapisanych w pliku.</p>


<p>Jeżeli jesteś użytkownikiem Windowsa ... cóż, najpierw chociaż wypróbuj Linuxa ;), a jeśli dojdziesz do wniosku, że Ci nie odpowiada, możesz skorzystać z Cygwina, który jest linuksopodobnym środowiskiem działającym pod kontrolą systemu Microsoftu, emulującym funkcje API Linuxa.</p>


<p><a href="http://www.cygwin.com/">Oficjalna strona projektu Cygwin</a></p>


<p>Instalacja jest intuicyjna, ale aby przyszłe wersje skryptu były obsługiwane warto zatrzymać się przy wyborze pakietów i upewnić się, że będą instalowane:</p>


<p></p>


<ul>
<li>Base / grep</li>
<li>Net / wget</li>
<li>Net / curl</li>
</ul>


<p></p>


<p><img src="http://i40.tinypic.com/2ciei3l.jpg"></p>


<p>Po zakończeniu instalacji można już uruchomić środowisko, które powita nas ślicznym promptem.</p>


<p><img src="http://i44.tinypic.com/s3q25v.jpg"></p>


<p>Cygwin to dobre środowisko dla osób, które chcą rozpocząć przygodę z linuxem, bądź wykorzystać jego zalety, m.in. jak w naszym przypadku możliwości skryptowe. Jednak nic nie stoi na przeszkodzie, aby emulować również środowisko graficzne za pomocą <a href="http://kde-cygwin.sourceforge.net/">Kde on Cygwin</a></p>


<p>Wróćmy jednak do tematu. Skrypt wymaga kilku kroków przygotowawczych. Wygodniej będzie na przykład umieścić go w katalogu dostępnym przez zmienną PATH, by uprościć jego wywoływanie. Ponadto należy mu nadać atrybut wykonywalności.</p>


<p><code>cd /usr/local/bin<br>
wget http://rs.nerdblog.pl/stable/latest/rsget-mod.sh<br>
chmod +x rsget-mod.sh</code></p>


<p>Uwaga! W przypadku korzystania z serwera proxy należy wcześniej ustawić zmienną http_proxy:</p>


<p><code>export http_proxy="http://adres_serwera:port/"</code></p>


<p>lub</p>


<p><code>export http_proxy="http://użytkownik:hasło@adres_serwera:port/"</code></p>


<p>Sprawdzamy czy wszystko jest tam, gdzie trzeba i wywołujemy skrypt po raz pierwszy.</p>


<p><img src="http://i42.tinypic.com/28c2hs2.jpg"></p>


<p>Wersja unstable stworzy dodatkowo w katalogu domowym użytkownika swój podkatalog z ustawieniami oraz plikami pomocniczymi.</p>


<p>Teraz wystarczy jedynie nakarmić skrypt linkami do pobierania:</p>


<p><code>cat &gt; ~/linki.txt<br>
http://rs123.rapidshare.com/files/1234567891/BigFile_part1.rar<br>
http://rs123.rapidshare.com/files/1234567892/BigFile_part2.rar<br>
http://rs123.rapidshare.com/files/1234567893/BigFile_part2.rar<br>
[Ctrl+D]</code></p>


<p>Inicjujemy ściąganie za pomocą</p>


<p><code>rsget-mod.sh ~/linki.txt</code></p>


<p><img src="http://i44.tinypic.com/332xo2o.jpg"></p>


<p><img src="http://i40.tinypic.com/1055p51.jpg"></p>


<p>Od teraz skrypt zajmie się wszystkimi czynnościami związanymi z obsługa pobierania i oczekiwania. Nam pozostaje tylko zostawić maszynę i wybrać się na spacer lub wycieczkę rowerową.</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RM fail]]></title>
    <link href="http://blog.codemonkey.pl/2009/01/07/rm-fail/"/>
    <updated>2009-01-07T22:18:00+01:00</updated>
    <id>http://blog.codemonkey.pl/2009/01/07/rm-fail</id>
    <content type="html"><![CDATA[<p>Dziwne, nigdy nie przypuszczałem, że taka podstawowa komenda jak rm może się nie powieść (oczywiście bez szczególnych przypadków jak uprawnienia czy brak pliku ... ;) )</p>


<p><code>quiz:/var/spool/mqueue-client# <b>rm *</b><br>
-bash: /bin/rm: <b>Lista argumentów za długa</b></code></p>


<p><EXCERPT><p>hmmm</p></p>

<p><code>quiz:/var/spool/mqueue-client# ls -1 | wc<br>
13625 13625 231625</code></p>


<p>Trochę ponad 10k plików i się remik gubi.<br>
Powodem był 'odrobinkę' nieskonfigurowany sendmail</p>


<p>Rozwiązaniem może być na przykład skorzystanie z xargs, który wykonuje polecenie z argumentami podanymi przez stdin:</p>


<p><code>quiz:/var/spool/mqueue-client# ls -1 | xargs rm ...<br>
quiz:/var/spool/mqueue-client# ls -1 | wc<br>
0 0 0</code></p>


<p>Mały test innego sposobu: <code># for i in `seq 1 13625` ; do echo "666" &gt; $i; done #tworzenie plikow<br>
...<br>
# find . -delete</code><br>
I co się okazuje:<br>
<code># time find . -delete<br>
<br>
real 0m1.421s<br>
user 0m0.068s<br>
sys 0m1.336s<br>
<br>
<br>
# time ls -1 | xargs rm<br>
<br>
real 0m2.955s<br>
user 0m0.440s<br>
sys 0m2.400s</code><br>
Podczas sprawdzania zauważyłem, że pliki za pierwszym razem tworzą się odrobinę dłużej.</p>


<p>PS. Niech ktoś coś zrobi z tym certyfikatem ...</p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tricki w Debianie]]></title>
    <link href="http://blog.codemonkey.pl/2008/10/04/tricki-w-debianie/"/>
    <updated>2008-10-04T08:54:00+02:00</updated>
    <id>http://blog.codemonkey.pl/2008/10/04/tricki-w-debianie</id>
    <content type="html"><![CDATA[<p>Usuwanie ostatnio zainstalowanych (niepotrzebnie) pakietów:</p>

<p><code>apt-get --purge remove `cat dpkg.log | grep " installed" | awk '{print $5}'`</code></p>

<p>Takie rzeczy w dystrybucjach debianopochodnych są po prostu cudowne</p>
]]></content>
  </entry>
  
</feed>
